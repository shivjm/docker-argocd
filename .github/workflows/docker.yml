on:
  workflow_call:
    inputs:
      push:
        description: "Whether to publish images to GHCR"
        required: true
        type: boolean

env:
  image: ghcr.io/shivjm/argocd
  go: 1.18.0-alpine
  age: v1.0.0
  helmSecrets: v4.1.1
  jb: 6bb2d1af6c8a6522cfe74e7a9cf49619d18448a1
  jsonnet: v0.18.0
  gojsontoyaml: v0.1.0
  ksops: v3.0.2
  curl: 7.80.0

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        argo:
          - v2.1.0
          - v2.1.1
          - v2.1.2
          - v2.1.3
          - v2.1.4
          - v2.1.5
          - v2.1.6
          - v2.1.7
          - v2.1.8
          - v2.1.9
          - v2.1.10
          - v2.1.11
          - v2.1.12
          - v2.1.13
          - v2.1.14
          - v2.1.15
          - v2.1.16
          - v2.2.0
          - v2.2.1
          - v2.2.2
          - v2.2.3
          - v2.2.4
          - v2.2.5
          - v2.2.6
          - v2.2.7
          - v2.2.8
          - v2.2.9
          - v2.2.10
          - v2.2.11
          - v2.2.12
          - v2.2.13
          - v2.3.0
          - v2.3.1
          - v2.3.2
          - v2.3.3
          - v2.3.4
          - v2.3.5
          - v2.3.6
          - v2.3.7
          - v2.3.8
          - v2.4.0
          - v2.4.1
          - v2.4.2
          - v2.4.3
          - v2.4.4
          - v2.4.5
          - v2.4.6
          - v2.4.7
          - v2.4.8
          - v2.4.9
          - v2.4.10
          - v2.4.11
          - v2.4.12
          - v2.4.13
          # - v2.0.5 # official image uses `USER argocd` instead of `USER 999`
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        if: ${{ inputs.push == true }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # TODO use dockerfile-image-tags to parse tool versions where possible
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.image }}
          labels: |
            tools.helmsecrets.version=${{ env.helmSecrets }}
            tools.jsonnetBundler.commit=${{ env.jb }}
            tools.jsonnet.version=${{ env.jsonnet }}
            tools.gojsontoyaml.version=${{ env.gojsontoyaml }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          cache-from: type=registry,ref=${{ env.image }}
          cache-to: type=inline
          build-args: |
            ARGOCD_VERSION=${{ matrix.argo }}
            GO_VERSION=${{ env.go }}
            AGE_VERSION=${{ env.age }}
            KSOPS_VERSION=${{ env.ksops }}
            HELM_SECRETS_VERSION=${{ env.helmSecrets }}
            JSONNET_BUNDLER_COMMIT=${{ env.jb }}
            GOJSONNET_VERSION=${{ env.jsonnet }}
            GOJSONTOYAML_VERSION=${{ env.gojsontoyaml }}
            CURL_VERSION=${{ env.curl }}
          tags: "${{ env.image }}:${{ matrix.argo }}" # ignore metadata-action tags
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ inputs.push == true }}
